#include <iostream>
#include <thread>
#include <functional>
#include <Windows.h>

import rbx.api;
import rbx.init;
import rbx.object;
import rbx.task_scheduler;
import rbx.bypass.console;

int main() {
	rbx::bypass::console(L"hello world");

	auto scheduler = rbx::get_task_scheduler();
	scheduler->hook_job();
	scheduler->push([]() {
		rbx::State* roblox_state = rbx::get_lua_state();

		rbx::init(roblox_state);

		rbx::getglobal(roblox_state, "game");
		rbx::getfield(roblox_state, -1, "Players");
		rbx::getfield(roblox_state, -1, "LocalPlayer");
		rbx::getfield(roblox_state, -1, "Character");
		rbx::getfield(roblox_state, -1, "Humanoid");
		rbx::pushnumber(roblox_state, 50);
		rbx::setfield(roblox_state, -2, "WalkSpeed");
	});

	return 0;
}

bool __stdcall DllMain(void* instance_handle, std::uintptr_t reason, void*) {
	if (reason == DLL_PROCESS_ATTACH) {
		std::thread(main).detach();
	}

	return true;
}
