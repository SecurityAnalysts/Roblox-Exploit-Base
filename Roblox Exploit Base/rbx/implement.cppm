module;

#include <array>

export module rbx.implement;

import rbx.api;
import rbx.object;

//import rbx.library.debug; sz

import rbx.implement.env;

export namespace rbx::implement {
	auto init = [](rbx::State* R) {
		std::array functions{
			std::make_pair(rbx::implement::getrenv, "getrenv"),
			std::make_pair(rbx::implement::getgenv, "getgenv"),
		};	

		for (const auto& [function, name] : functions) {
			rbx::pushcclosure(R, function, 0);
			rbx::setregistry(R, name);
		}


	};
}
